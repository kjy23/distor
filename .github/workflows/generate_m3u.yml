name: Generate DistroTV M3U

on:
  workflow_dispatch: # 允许在 GitHub Actions 界面手动触发
  schedule:
    - cron: '0 */6 * * *' # 每6小时运行一次 (例如：UTC时间 0点, 6点, 12点, 18点)

jobs:
  build:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 操作系统作为运行环境

    steps:
    - name: Checkout repository # 检出代码到工作目录
      uses: actions/checkout@v4

    - name: Set up Python # 设置 Python 环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # 使用最新的 Python 3 版本

    - name: Install dependencies # 安装 requirements.txt 中列出的所有依赖
      run: pip install -r requirements.txt

    - name: Generate M3U and EPG # 运行 Python 脚本生成 M3U 和 EPG 文件
      # 使用 ${{ github.workspace }} 变量确保准确找到位于仓库根目录的脚本
      run: python ${{ github.workspace }}/distrotv_grabber.py

    - name: Verify generated files exist # 新增的调试步骤，用于检查文件是否存在
      run: |
        echo "Listing files in current directory (should be repository root):"
        ls -l
        echo "Checking for distrotv_epg.xml..."
        if [ -f "distrotv_epg.xml" ]; then
          echo "distrotv_epg.xml found!"
          echo "Content of distrotv_epg.xml (first 20 lines):"
          head -n 20 distrotv_epg.xml
        else
          echo "ERROR: distrotv_epg.xml was NOT found! Please check distrotv_grabber.py output."
          exit 1 # 如果文件不存在，让这个步骤失败，阻止后续提交
        fi

        echo "Checking for distrotv_channels.m3u..."
        if [ -f "distrotv_channels.m3u" ]; then
          echo "distrotv_channels.m3u found!"
          echo "Content of distrotv_channels.m3u (first 20 lines):"
          head -n 20 distrotv_channels.m3u
        else
          echo "ERROR: distrotv_channels.m3u was NOT found!"
          exit 1 # 如果文件不存在，让这个步骤失败
        fi

    - name: Commit and push M3U and EPG if changed # 如果 M3U 或 EPG 文件有变化则提交并推送回仓库
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # 将 M3U 和 EPG 文件都添加到 Git 暂存区
        git add distrotv_channels.m3u
        git add distrotv_epg.xml

        # 检查暂存区是否有实际的更改。如果有，则提交。
        if ! git diff --cached --quiet; then
          echo "Changes detected for M3U or EPG. Committing..."
          git commit -m "Update DistroTV M3U and EPG"
        else
          echo "No changes to commit for M3U or EPG."
          exit 0 # 如果没有更改，则退出此步骤，不执行push
        fi

        # 如果有新的提交，则推送到远程仓库
        # 注意：默认的 GITHUB_TOKEN 通常只有读权限。
        # 如果您遇到推送权限问题（例如，由于分支保护），
        # 请在仓库 Settings -> Secrets -> Actions 中创建一个具有 'repo' 权限的 Personal Access Token (PAT)。
        # 然后将 `GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}` 替换为您的 Secret 名称，
        # 例如 `GITHUB_TOKEN: ${{ secrets.MY_REPO_PUSH_TOKEN }}`。
        git push || echo "No new commits to push or push failed (e.g. branch protection)."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 默认的 GitHub Actions 令牌
        # 如果使用自定义 PAT，请改为：
        # GITHUB_TOKEN: ${{ secrets.YOUR_CUSTOM_PAT_SECRET_NAME }} # 替换为你的Secret名称